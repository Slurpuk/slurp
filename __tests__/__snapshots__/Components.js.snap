// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Components Custom sub-components button should render correctly 1`] = `
<View>
  <View
    collapsable={false}
    style={
      Object {
        "transform": Array [
          Object {
            "scale": 1,
          },
        ],
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 13,
          "display": "flex",
          "flexDirection": "row",
          "height": 43,
          "justifyContent": "center",
          "opacity": 1,
          "width": 682.5,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#EFEFEF",
            "fontFamily": "Poppins-SemiBold",
            "fontSize": 17,
            "letterSpacing": 0.5,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Components Custom sub-components button should render correctly with number indicator 1`] = `
<View>
  <View
    collapsable={false}
    style={
      Object {
        "transform": Array [
          Object {
            "scale": 1,
          },
        ],
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 13,
          "display": "flex",
          "flexDirection": "row",
          "height": 43,
          "justifyContent": "center",
          "opacity": 1,
          "width": 682.5,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#EFEFEF",
            "fontFamily": "Poppins-SemiBold",
            "fontSize": 17,
            "letterSpacing": 0.5,
          }
        }
      />
      <Text
        style={
          Array [
            Object {
              "borderRadius": 10,
              "height": 20,
              "marginBottom": 15,
              "marginLeft": 8,
              "overflow": "hidden",
              "textAlign": "center",
              "width": 20,
            },
            undefined,
          ]
        }
      >
        5
      </Text>
    </View>
  </View>
</View>
`;

exports[`Components green header should render correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#046D66",
      "flexDirection": "row",
      "paddingBottom": "6%",
      "paddingHorizontal": "5%",
      "paddingTop": undefined,
    }
  }
>
  <View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "opacity": 1,
            "underlayColor": "gray",
          },
          Object {},
        ]
      }
      title=""
      underlayColor="transparent"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "color": "white",
              "fontSize": 34,
            },
            undefined,
            Object {
              "fontFamily": undefined,
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "marginTop": "2%",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#EDEBE7",
          "fontFamily": "JosefinSans-Bold",
          "fontSize": 27,
          "fontStyle": "normal",
          "includeFontPadding": false,
          "letterSpacing": 0.4,
          "marginLeft": 20,
        }
      }
    />
  </View>
</View>
`;

exports[`Components white arrow button Renders an icon 1`] = `
<Text
  allowFontScaling={false}
  selectable={false}
  style={
    Array [
      Object {
        "color": undefined,
        "fontSize": 12,
      },
      undefined,
      Object {
        "fontFamily": undefined,
        "fontStyle": "normal",
        "fontWeight": "normal",
      },
      Object {},
    ]
  }
>
  
</Text>
`;

exports[`Components white arrow button renders correctly if the arrow points down 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "opacity": 1,
        "underlayColor": "gray",
      },
      Object {},
    ]
  }
  title=""
  underlayColor="transparent"
>
  <Text
    allowFontScaling={false}
    selectable={false}
    style={
      Array [
        Object {
          "color": "white",
          "fontSize": 34,
        },
        undefined,
        Object {
          "fontFamily": undefined,
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
  >
    
  </Text>
</View>
`;

exports[`Components white arrow button renders correctly if the arrow points left 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "opacity": 1,
        "underlayColor": "gray",
      },
      Object {},
    ]
  }
  title=""
  underlayColor="transparent"
>
  <Text
    allowFontScaling={false}
    selectable={false}
    style={
      Array [
        Object {
          "color": "white",
          "fontSize": 34,
        },
        undefined,
        Object {
          "fontFamily": undefined,
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
  >
    
  </Text>
</View>
`;

exports[`Components white arrow button renders correctly if the arrow points right 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "opacity": 1,
        "underlayColor": "gray",
      },
      Object {},
    ]
  }
  title=""
  underlayColor="transparent"
>
  <Text
    allowFontScaling={false}
    selectable={false}
    style={
      Array [
        Object {
          "color": "white",
          "fontSize": 34,
        },
        undefined,
        Object {
          "fontFamily": undefined,
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
  >
    
  </Text>
</View>
`;

exports[`Components white arrow button renders correctly if the arrow points up 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "opacity": 1,
        "underlayColor": "gray",
      },
      Object {},
    ]
  }
  title=""
  underlayColor="transparent"
>
  <Text
    allowFontScaling={false}
    selectable={false}
    style={
      Array [
        Object {
          "color": "white",
          "fontSize": 34,
        },
        undefined,
        Object {
          "fontFamily": undefined,
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
  >
    
  </Text>
</View>
`;

exports[`Components white arrow button should render correctly 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "opacity": 1,
        "underlayColor": "gray",
      },
      Object {},
    ]
  }
  title=""
  underlayColor="transparent"
>
  <Text
    allowFontScaling={false}
    selectable={false}
    style={
      Array [
        Object {
          "color": "white",
          "fontSize": 34,
        },
        undefined,
        Object {
          "fontFamily": undefined,
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
  >
    
  </Text>
</View>
`;
